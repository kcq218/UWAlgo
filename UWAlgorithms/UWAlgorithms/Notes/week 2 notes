diamond

Week 2 Notes
Big O

Average Case/ Best Case/ Worst Case
Big O = execution time, there is also space for Big O
Time vs space(Memory) cost
How fast they perform
Input size = N
O(1) constant time
O(1) can be good but also can be bad (always 1 minute)

O(N)


O(log of n ) is usually faster than o (N) Also known as sublinear
O log of n is usually base 2
take input and do log base 2 to compare runtime based on input.

log algorithms examples
find an element in sorted array(Binary Search)
O(log n) binary search tree is the same
in a balanced binary search tree
it'll take 10 searches worst case for 1000 element
it'll tkae 30 searches worst for 1 billion or 10^ 9

N * (Log N) usually slower then N but is faster that n ^ 2

O 2 ^ n

Exponential
2 ^ 5 is 32 operation
2 ^ 6 is 64 operations

Examples: Crypto key of two bits
2 bit vs 64 bit 4 combinations vs 
184,466,744,073,709,551,616

Factorial
1*2*3*4*5

Space Complexity
O(1) does not allocate extra space based on input.

hw
1.If the input n is just a number then it is 0(1) because the Array would be fixed, every time this algorithm is run it will run the same amount of time because it is accumulating count of n in a fixed array.If input is a number to search for and an array then the run time would be O(n) based on the size of the array being passed in.2.